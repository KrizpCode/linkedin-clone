import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { getSession, useSession } from 'next-auth/react';
import { AnimatePresence } from 'framer-motion';
import { useRecoilState } from 'recoil';

import { modalState, modalTypeState } from '../atoms/modalAtom';
import { connectToDatabase } from '../utils/mongodb';
import Modal from '../components/Modal';
import Header from '../components/Header';
import Sidebar from '../components/Sidebar';
import Feed from '../components/Feed';
import Widgets from '../components/Widgets';

interface PostType {
    _id: string;
    input: string;
    photoUrl: string;
    username: string | null | undefined;
    email: string | null | undefined;
    userImg: string | null | undefined;
    createdAt: string;
}

interface ArticlesType {
    author: string;
    description: string;
    title: string;
    url: string;
    urlToImage: string;
    publishedAt: string;
}

interface HomeProps {
    posts: PostType[];
    articles: ArticlesType[];
}

const Home: NextPage<HomeProps> = ({ posts, articles }) => {
    const [modalOpen, setModalOpen] = useRecoilState(modalState);
    const [modalType, setModalType] = useRecoilState(modalTypeState);
    const router = useRouter();

    console.log(articles);

    const { status } = useSession({
        required: true,
        onUnauthenticated() {
            router.push('/home');
        },
    });

    return (
        <div className="bg-[#F3F2EF] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6">
            <Head>
                <title>Feed | LinkedIn</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Header />

            <main className="flex justify-center gap-x-5 px-4 sm:px-12">
                <div className="flex flex-col md:flex-row gap-5">
                    <Sidebar />
                    <Feed posts={posts} />
                </div>

                <Widgets articles={articles} />

                <AnimatePresence>
                    {modalOpen && <Modal handleClose={() => setModalOpen(false)} type={modalType} />}
                </AnimatePresence>
            </main>
        </div>
    );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
    const session = await getSession(context);

    if (!session) {
        return {
            redirect: {
                permanent: false,
                destination: '/home',
            },
        };
    }

    const { db } = await connectToDatabase();
    const posts = await db.collection('posts').find().sort({ timestamp: -1 }).toArray();

    const results = await fetch(
        `https://newsapi.org/v2/top-headlines?country=se&apiKey=${process.env.NEWS_API_KEY}&pageSize=5`
    ).then((res) => res.json());

    return {
        props: {
            session,
            articles: results.articles,
            posts: posts.map((post) => ({
                _id: post._id.toString(),
                input: post.input,
                photoUrl: post.photoUrl,
                username: post.username,
                email: post.email,
                userImg: post.userImg,
                createdAt: post.createdAt,
            })),
        },
    };
};
